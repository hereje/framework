#
# GitHub Actions workflow.
#
# Releases the package to npm when a push into main is detected.
# * Perform the PR Checks
# * Bump version number
# * Release to NPM
#

name: Release (ApiLayer)

on:
    push:
        branches: [ main ]
        path: apps/apilayer/**

jobs:
#    pr_checks:
#        name: Pre-Release Checks (ApiLayer)
#        runs-on: ubuntu-latest
#        steps:
#            -   name: Install Node.js
#                uses: actions/setup-node@v3
#                with:
#                    node-version: 19
#                    cache: 'pnpm'
#                    cache-dependency-path: apps/apilayer/package-lock.json
#
#            -   name: Checkout
#                uses: actions/checkout@v2
#
#            -   name: FontAwesome Auth
#                run: echo -e "@fortawesome:registry=https://npm.fontawesome.com/\n//npm.fontawesome.com/:_authToken=${{ secrets.FONTAWESOME_AUTH_TOKEN }}" > .npmrc
#
#            -   name: Install dependencies
#                uses: pnpm/action-setup@v2
#                with:
#                    version: 8
#                    run_install: false
#
#            -   name: Install dependencies
#                run: pnpm i --shamefully-hoist
#
#            -   name: Lint
#                run: cd apps/apilayer/ && pnpm run && pnpm run lint
#
#            -   name: Build Docker Image
#                run: pnpm run start:docker:build
#
#            -   name: Test
#                run: cd apps/apilayer/ && pnpm run test

    release:
       # needs: [ pr_checks ]
        name: Release (ApiLayer)
        runs-on: ubuntu-latest
        steps:
            -   name: Install Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: 19
                    cache: 'pnpm'
                    cache-dependency-path: apps/apilayer/package-lock.json

            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Install pnpm
                uses: pnpm/action-setup@v2
                with:
                    version: 8
                    run_install: false

            -   name: Choose correct package
                run: cd apps/apilayer/

            -   name: Bump versions
                uses: remorses/bump-version@js
                with:
                    version_file: apps/apilayer/package.json
                    prefix: apilayer # this will prefix the created tag
                #env:
                   # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publishing package
              if: steps.bumping-version.outputs.bump-performed == 'true'
              run: pnpm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}