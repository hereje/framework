#!/usr/bin/env bash
set -e
. "$JL_WORKDIR/common"

cli_help() {
  echo "
Command: services

Use: Helpful commands for dealing with services

Example: JL services
"
exit 1
}

cli_log "Services"

IFS=','

if [ "$PROJECT_NEST_SERVICES" ]
	then
		read -ra options <<< "$PROJECT_NEST_SERVICES"
    elif [ "$PROJECT_VITE_SERVICES" ]
	then
		read -ra options <<< "$PROJECT_VITE_SERVICES"
	fi

if [ -z "$options" ]
	then
		cli_log_error "No services found"
		exit 1
	fi

cli_log "Available services: "

# Define a variable to store the selected options
selected_option=""

# Loop through the array of strings and create a select menu
PS3="Select service: "
select opt in "${options[@]}"; do
    # If the user enters a number, add the corresponding string to the selected options
    if [[ "$REPLY" =~ ^[0-9]+$ ]] && (( "$REPLY" >= 1 && "$REPLY" <= "${#options[@]}" )); then
        selected_option+="${options[$REPLY-1]}"
        break
    else
        cli_log_error "Invalid option"
    fi
done

cli_log "What would you like to do with the $selected_option service?"

PS3=''
SERVICEOPTIONS=("Restart" "Quit")

select opt in "${SERVICEOPTIONS[@]}"; do

    case $opt in
        "Restart")
            cli_log "Restart $selected_option service"
            	IFS=', ' read -r -a PORTS <<< "$PROJECT_PORTS"

				for INDEX in "${!options[@]}"; do
				   if [[ "${options[$i]}" = "${selected_option}" ]]; then
					  npx kill-port ${PORTS[$INDEX]}
                      cli_log "Starting service: $selected_option"
                      echo "Starting service: $selected_option" > logs/$selected_option.log &
                      export PORT_$INDEX=${PORTS[$INDEX]}
                      nest start --watch $selected_option > logs/$selected_option.log 2>&1 &
				   fi
				done
            exit
            ;;
	"Quit")
	    exit
	    ;;
        *) cli_log_error "Invalid option";;
    esac
done

